syntax = "proto3";
package soupyfinance.noodle.dex;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "dex/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/soupy-finance/noodle/x/dex/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/soupyfinance/noodle/dex/params";
  }
  // Queries a list of Book items.
	rpc Book(QueryBookRequest) returns (QueryBookResponse) {
		option (google.api.http).get = "/soupy-finance/noodle/dex/book/{market}/{side}";
	}

// Queries a list of Books items.
	rpc Books(QueryBooksRequest) returns (QueryBooksResponse) {
		option (google.api.http).get = "/soupy-finance/noodle/dex/books/{market}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryBookRequest {
  string market = 1;
  bool side = 2;
}

message QueryBookResponse {
  string pure = 1;
  string amm = 2;
}

message QueryBooksRequest {
  string market = 1;
}

message QueryBooksResponse {
  string bids = 1;
  string asks = 2;
  string amm = 3;
}

// this line is used by starport scaffolding # 3
